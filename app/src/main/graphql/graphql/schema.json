{
  "data": {
    "__schema": {
      "queryType": {
        "name": "query"
      },
      "mutationType": {
        "name": "mutation"
      },
      "subscriptionType": null,
      "types": [
        {
          "kind": "OBJECT",
          "name": "query",
          "description": null,
          "fields": [
            {
              "name": "product",
              "description": "Query method allowing you fetch a single product from the catalog.",
              "args": [
                {
                  "name": "id",
                  "description": "The identifier of the product that should be fetched. If an invalid identifier is specified, an error is returned.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RecommendedProduct",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "products",
              "description": "Query method allowing you fetch a batch of products from the catalog.",
              "args": [
                {
                  "name": "limit",
                  "description": "The limit parameter limits the number of the products in a batch.The limit and offset parameters are used in conjunction to implement pagination",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "offset",
                  "description": "The offset parameter offsets the product listing by the given amount. The limit and offset parameters are used in conjunction to implement pagination",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RecommendedProduct",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "recos",
              "description": "A recommender exposing the browsing history of a customer",
              "args": [
                {
                  "name": "preview",
                  "description": "A boolean flag indicating whether you are previewing the recommendations. Enabling this will serve recommendations normally but the session will not be mutated. If no products match the recommender criteria, mock products will be returned.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Boolean",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "image",
                  "description": "An enum that allows specifying the image format of the products in the recommendations. The value specified here affects all recommendations in the current request.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "ImageVersionType",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RecoQueryEntity",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "session",
              "description": "Query method allowing you fetch the state of the current session.",
              "args": [
                {
                  "name": "id",
                  "description": "The identifier of the session that should be fetched. If an invalid identifier is specified, an error is returned.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Session",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "RecommendedProduct",
          "description": "A container of the details of a single product",
          "fields": [
            {
              "name": "alternateImageUrls",
              "description": "The alternative image URLs of the product",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "attributes",
              "description": "The custom attributes of the product",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "KeyValueEntity",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "availability",
              "description": "The availability of the product",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "brand",
              "description": "The brand of the product",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "categories",
              "description": "The categories of the product",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "The description of the product",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "imageUrl",
              "description": "The image URL of the product",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "listPrice",
              "description": "The list price of the product",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the product",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "price",
              "description": "The price of the product. The price of the product is the lowest price of all it's available variants",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "currencyCode",
              "description": "The currency code of the product",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "productId",
              "description": "The identifier of the product",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ratingValue",
              "description": "The rating value of the product",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reviewCount",
              "description": "The review count of the product",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "skus",
              "description": "The variations of the product",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RecommendedSku",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tags1",
              "description": "The first set of tags of the product",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tags2",
              "description": "The second set of tags of the product",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tags3",
              "description": "The third set of tags of the product",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "thumbUrl",
              "description": "The thumb URL of the product",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The URL of the product",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "variantId",
              "description": "The variant identifier of the product.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "String",
          "description": "Built-in String",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "KeyValueEntity",
          "description": "A generic key-value pair for representing product attributes.",
          "fields": [
            {
              "name": "key",
              "description": "The key of the attribute",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "value",
              "description": "The value of the attribute",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Float",
          "description": "Built-in Float",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Int",
          "description": "Built-in Int",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "RecommendedSku",
          "description": "A container of the details of a product's variant",
          "fields": [
            {
              "name": "availability",
              "description": "The availability of the variant",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The identifier of the variant",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "imageUrl",
              "description": "The image URL of the variant",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "listPrice",
              "description": "The list price of the variant",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the variant",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "price",
              "description": "The current price of the variant",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The URL of the variant",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "RecoQueryEntity",
          "description": "A container encapsulating all the raw recommenders available. These recommenders are not pre-configured and are parameterised. These recommenders should be used for advanced use cases.",
          "fields": [
            {
              "name": "live",
              "description": "A recommender exposing the live traffic activity on the store",
              "args": [
                {
                  "name": "params",
                  "description": "The inclusion, exclusion, threshold and variant parameters for the recommender. If products need to be excluded, included or minimum or maximum product threshold is needed, then these params must be specified.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "InputRecommenderParams",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RecommenderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "random",
              "description": "A recommender exposing a random result set for debugging purposes",
              "args": [
                {
                  "name": "params",
                  "description": "The inclusion, exclusion, threshold and variant parameters for the recommender. If products need to be excluded, included or minimum or maximum product threshold is needed, then these params must be specified.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "InputRecommenderParams",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RecommenderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "related",
              "description": "A recommender exposing cross sells for a specified product",
              "args": [
                {
                  "name": "productIds",
                  "description": "The list of product identifiers for which related products should be recommended.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "relationship",
                  "description": "The relation factor can be used to recommend products that are viewed together, bought together or smart relations (with a weightage on buys.)",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "RelationModeEntity",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "params",
                  "description": "The inclusion, exclusion, threshold and variant parameters for the recommender. If products need to be excluded, included or minimum or maximum product threshold is needed, then these params must be specified.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "InputRecommenderParams",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RecommenderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "search",
              "description": "A recommender exposing search related recommendations",
              "args": [
                {
                  "name": "term",
                  "description": "The current search term that is used when find related products.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "params",
                  "description": "The inclusion, exclusion, threshold and variant parameters for the recommender. If products need to be excluded, included or minimum or maximum product threshold is needed, then these params must be specified.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "InputRecommenderParams",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RecommenderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "toplist",
              "description": "A recommender exposing the most popular products on the store",
              "args": [
                {
                  "name": "hours",
                  "description": "The period (in hours) for which the toplist is to be recommended. A default value of 168 i.e. a week, is suggested. A maximum period length of a month can be specified",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "sort",
                  "description": "The scoring mode can be used to return the most viewed products ot the most bought products.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "ScoringModeType",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "params",
                  "description": "The inclusion, exclusion, threshold and variant parameters for the recommender. If products need to be excluded, included or minimum or maximum product threshold is needed, then these params must be specified.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "InputRecommenderParams",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RecommenderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "RecommenderResult",
          "description": "A container for the response of a recommender",
          "fields": [
            {
              "name": "primary",
              "description": "The list of primary results returned by the recommender.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RecommendedProduct",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "InputRecommenderParams",
          "description": "The inclusion, exclusion, threshold and variant parameters for the recommender.",
          "fields": null,
          "inputFields": [
            {
              "name": "exclude",
              "description": "The exclusion boundaries of products required from the recommender",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "InputFilterParams",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "include",
              "description": "The inclusion boundaries of products required from the recommender",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "InputIncludeParams",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "maxProducts",
              "description": "The maximum number of the products required from the recommender",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "minProducts",
              "description": "The minimum number of the products required from the recommender",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "variantId",
              "description": "The variation of the products required from the recommender",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "InputFilterParams",
          "description": "A container for containing information about the inclusion or exclusion parameters",
          "fields": null,
          "inputFields": [
            {
              "name": "brands",
              "description": "The list of brand used for inclusion or exclusion",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "categories",
              "description": "The list of categories used for inclusion or exclusion",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "discounted",
              "description": "A boolean indicating whether discounted products should be excluded",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "productIds",
              "description": "The list of product identifiers used for inclusion or exclusion",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "tags1",
              "description": "The first set of tags used for inclusion or exclusion",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "tags2",
              "description": "The second set of tags used for inclusion or exclusion",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "tags3",
              "description": "The third set of tags used for inclusion or exclusion",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "SCALAR",
          "name": "Boolean",
          "description": "Built-in Boolean",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "InputIncludeParams",
          "description": "A container for containing information about the inclusion or exclusion parameters",
          "fields": null,
          "inputFields": [
            {
              "name": "brands",
              "description": "The list of brand used for inclusion or exclusion",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "categories",
              "description": "The list of categories used for inclusion or exclusion",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "discounted",
              "description": "A boolean indicating whether discounted products should be excluded",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "fresh",
              "description": "A boolean value denoting the inclusion of new products",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "price",
              "description": "The price range used for inclusion",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "InputPriceParams",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "productIds",
              "description": "The list of product identifiers used for inclusion or exclusion",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "rating",
              "description": "The minimum rating score for the inclusion",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "reviews",
              "description": "The minimum amount of reviews for the inclusion",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "stock",
              "description": "The stock level range used for inclusion",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "InputStockParams",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "tags1",
              "description": "The first set of tags used for inclusion or exclusion",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "tags2",
              "description": "The second set of tags used for inclusion or exclusion",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "tags3",
              "description": "The third set of tags used for inclusion or exclusion",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "InputPriceParams",
          "description": null,
          "fields": null,
          "inputFields": [
            {
              "name": "max",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "min",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "InputStockParams",
          "description": null,
          "fields": null,
          "inputFields": [
            {
              "name": "max",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "min",
              "description": null,
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "RelationModeEntity",
          "description": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "VIEWED_TOGETHER_SMART",
              "description": "VIEWED_TOGETHER_SMART",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VIEWED_TOGETHER",
              "description": "VIEWED_TOGETHER",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BOUGHT_TOGETHER",
              "description": "BOUGHT_TOGETHER",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEFAULT_SUM",
              "description": "DEFAULT_SUM",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ScoringModeType",
          "description": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "BUYS",
              "description": "BUYS",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VIEWS",
              "description": "VIEWS",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "ImageVersionType",
          "description": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "VERSION_1_170_170",
              "description": "VERSION_1_170_170",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERSION_2_100_100",
              "description": "VERSION_2_100_100",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERSION_3_90_70",
              "description": "VERSION_3_90_70",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERSION_4_50_50",
              "description": "VERSION_4_50_50",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERSION_5_30_30",
              "description": "VERSION_5_30_30",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERSION_6_100_140",
              "description": "VERSION_6_100_140",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERSION_7_200_200",
              "description": "VERSION_7_200_200",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERSION_8_400_400",
              "description": "VERSION_8_400_400",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERSION_9_750_750",
              "description": "VERSION_9_750_750",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERSION_10_MAX_SQUARE",
              "description": "VERSION_10_MAX_SQUARE",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERSION_11_200_200_SQUARE",
              "description": "VERSION_11_200_200_SQUARE",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERSION_12_400_400_SQUARE",
              "description": "VERSION_12_400_400_SQUARE",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERSION_13_750_750_SQUARE",
              "description": "VERSION_13_750_750_SQUARE",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERSION_ORIGINAL",
              "description": "VERSION_ORIGINAL",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Session",
          "description": "The details of the current session after it has been mutated. The session contains all known information about the customer and can also be used to fetch recommendations related to the session.",
          "fields": [
            {
              "name": "cart",
              "description": "The details of the current customer's shopping cart. This drastically improves the recommender performance.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Cart",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "customer",
              "description": "The details of the currently logged-in customer. This is primarily used for email remarketing.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CustomerInfoEntity",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": "The unique customer identifier as provided by the recommender. This value should be persisted and reused for every request.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "recos",
              "description": "The recommendations that should be returned after the session has been updated.",
              "args": [
                {
                  "name": "preview",
                  "description": "A boolean flag indicating whether you are previewing the recommendations. Enabling this will serve recommendations normally but the session will not be mutated. If no products match the recommender criteria, mock products will be returned.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Boolean",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "image",
                  "description": "An enum that allows specifying the image format of the products in the recommendations. The value specified here affects all recommendations in the current request.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "ImageVersionType",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RecoRequestEntity",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "events",
              "description": "The list of events to be dispatched. Usually a single event is dispatched.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Event",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Cart",
          "description": "The itemised details of the customer's current shopping cart contents.",
          "fields": [
            {
              "name": "items",
              "description": "An array of items denoting the customer's current shopping cart",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Item",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Item",
          "description": "The details of the single line item in thr shopping cart.",
          "fields": [
            {
              "name": "name",
              "description": "The name of the product in the shopping cart. This name needs to represent the name of actual variation that was added to the cart. This field is optional and only used for abandoned-cart emails.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "priceCurrencyCode",
              "description": "The currency code of the product in the shopping cart. This currency code needs to represent the price of actual line item that was added to the cart.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "productId",
              "description": "The identifier of the product in the shopping cart. This identifier needs to represent the identifier of the parent product.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "quantity",
              "description": "The quantity of the product in the shopping cart. This quantity needs to represent the quantity of the actual line item that was added to the cart..",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "skuId",
              "description": "The identifier of the variation in the shopping cart. This identifier needs to represent the identifier of the actual variation. This field is optional but drastically enhances the performance of the recommender engine.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "unitPrice",
              "description": "The price of the product in the shopping cart. This unit price needs to represent the price of actual line item that was added to the cart.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "CustomerInfoEntity",
          "description": "A container containing the details personal details of a logged-in customer.",
          "fields": [
            {
              "name": "customerReference",
              "description": "A unique non-guessable customer reference such the hash of the customer'sloyalty program identifier. This is used to merge sessions across devices.While an email address can be used to uniquely identify a customer, it isn'tused, as it is a rather guessable identifier.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "email",
              "description": "The email address of the currently logged in user. The email address isoptional and primarily used for email remarketing.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "firstName",
              "description": "The first name of the currently logged in user. The first name is optionaland and primarily used for email remarketing.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastName",
              "description": "The last name of the currently logged in user. The last name is optionaland and primarily used for email remarketing.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "marketingPermission",
              "description": "A boolean indicating whether the customer has consented to receivingemail remarketing. If unspecified, this will default to false.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "RecoRequestEntity",
          "description": "A container encapsulating all the raw recommenders available. These recommenders are not pre-configured and are parameterised. These recommenders should be used for advanced use cases.",
          "fields": [
            {
              "name": "history",
              "description": "A recommender exposing the browsing history of a customer",
              "args": [
                {
                  "name": "params",
                  "description": "The inclusion, exclusion, threshold and variant parameters for the recommender. If products need to be excluded, included or minimum or maximum product threshold is needed, then these params must be specified.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "InputRecommenderParams",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RecommenderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "live",
              "description": "A recommender exposing the live traffic activity on the store",
              "args": [
                {
                  "name": "params",
                  "description": "The inclusion, exclusion, threshold and variant parameters for the recommender. If products need to be excluded, included or minimum or maximum product threshold is needed, then these params must be specified.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "InputRecommenderParams",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RecommenderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "random",
              "description": "A recommender exposing a random result set for debugging purposes",
              "args": [
                {
                  "name": "params",
                  "description": "The inclusion, exclusion, threshold and variant parameters for the recommender. If products need to be excluded, included or minimum or maximum product threshold is needed, then these params must be specified.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "InputRecommenderParams",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RecommenderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "related",
              "description": "A recommender exposing cross sells for a specified product",
              "args": [
                {
                  "name": "productIds",
                  "description": "The list of product identifiers for which related products should be recommended.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "relationship",
                  "description": "The relation factor can be used to recommend products that are viewed together, bought together or smart relations (with a weightage on buys.)",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "RelationModeEntity",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "params",
                  "description": "The inclusion, exclusion, threshold and variant parameters for the recommender. If products need to be excluded, included or minimum or maximum product threshold is needed, then these params must be specified.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "InputRecommenderParams",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RecommenderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "search",
              "description": "A recommender exposing search related recommendations",
              "args": [
                {
                  "name": "term",
                  "description": "The current search term that is used when find related products.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "params",
                  "description": "The inclusion, exclusion, threshold and variant parameters for the recommender. If products need to be excluded, included or minimum or maximum product threshold is needed, then these params must be specified.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "InputRecommenderParams",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RecommenderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "toplist",
              "description": "A recommender exposing the most popular products on the store",
              "args": [
                {
                  "name": "hours",
                  "description": "The period (in hours) for which the toplist is to be recommended. A default value of 168 i.e. a week, is suggested. A maximum period length of a month can be specified",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "sort",
                  "description": "The scoring mode can be used to return the most viewed products ot the most bought products.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "ScoringModeType",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "params",
                  "description": "The inclusion, exclusion, threshold and variant parameters for the recommender. If products need to be excluded, included or minimum or maximum product threshold is needed, then these params must be specified.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "InputRecommenderParams",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RecommenderResult",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "Event",
          "description": "An object used for denoting an interaction event such as product view or a search",
          "fields": [
            {
              "name": "target",
              "description": "The details of the event that needs to be dispatched for example, when viewing a product, the target is the identifier of the product; when viewing a category the target is the path of the category, and, when invoking a search the target is the actual search term. It is imperative that these events be sent.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "The type of the event that needs to be dispatched for example, viewing a product, viewing a category and invoking a search. It is imperative that these events be sent.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "InteractionEventType",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "InteractionEventType",
          "description": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "VIEWED_PRODUCT",
              "description": "VIEWED_PRODUCT",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VIEWED_CATEGORY",
              "description": "VIEWED_CATEGORY",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SEARCHED_FOR",
              "description": "SEARCHED_FOR",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "mutation",
          "description": null,
          "fields": [
            {
              "name": "updateSession",
              "description": null,
              "args": [
                {
                  "name": "id",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "params",
                  "description": null,
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "InputSessionParams",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Session",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "InputSessionParams",
          "description": "The schema’s entry-point for mutations. This acts as the public, top-level API from which all recommender queries must start.",
          "fields": null,
          "inputFields": [
            {
              "name": "cart",
              "description": "The itemised details of the customer's shopping cart. This should be always sent as the shopping cart contents provides intelligence to the recommender system and skews the recommendations.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "InputCart",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "customer",
              "description": "The details of the currently logged in customer. This is optional and primarily used for merging sessions and for use in email remarketing.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "InputCustomerInfoEntity",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "event",
              "description": "The details of the customer's current interaction with the page. When viewing products, categories or when searching, this field must be populated. The recommender gains intelligence using these events and omitting this will result in a steady decline in recommender performance.",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "InputEvent",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "InputCart",
          "description": "The itemised details of the customer's current shopping cart contents.",
          "fields": null,
          "inputFields": [
            {
              "name": "items",
              "description": "An array of items denoting the customer's current shopping cart",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputItem",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "InputItem",
          "description": "The details of the single line item in thr shopping cart.",
          "fields": null,
          "inputFields": [
            {
              "name": "name",
              "description": "The name of the product in the shopping cart. This name needs to represent the name of actual variation that was added to the cart. This field is optional and only used for abandoned-cart emails.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "priceCurrencyCode",
              "description": "The currency code of the product in the shopping cart. This currency code needs to represent the price of actual line item that was added to the cart.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "productId",
              "description": "The identifier of the product in the shopping cart. This identifier needs to represent the identifier of the parent product.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "quantity",
              "description": "The quantity of the product in the shopping cart. This quantity needs to represent the quantity of the actual line item that was added to the cart..",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "skuId",
              "description": "The identifier of the variation in the shopping cart. This identifier needs to represent the identifier of the actual variation. This field is optional but drastically enhances the performance of the recommender engine.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "unitPrice",
              "description": "The price of the product in the shopping cart. This unit price needs to represent the price of actual line item that was added to the cart.",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "InputCustomerInfoEntity",
          "description": "A container containing the details personal details of a logged-in customer.",
          "fields": null,
          "inputFields": [
            {
              "name": "customerReference",
              "description": "A unique non-guessable customer reference such the hash of the customer'sloyalty program identifier. This is used to merge sessions across devices.While an email address can be used to uniquely identify a customer, it isn'tused, as it is a rather guessable identifier.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "email",
              "description": "The email address of the currently logged in user. The email address isoptional and primarily used for email remarketing.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "firstName",
              "description": "The first name of the currently logged in user. The first name is optionaland and primarily used for email remarketing.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "lastName",
              "description": "The last name of the currently logged in user. The last name is optionaland and primarily used for email remarketing.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "marketingPermission",
              "description": "A boolean indicating whether the customer has consented to receivingemail remarketing. If unspecified, this will default to false.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "INPUT_OBJECT",
          "name": "InputEvent",
          "description": "An object used for denoting an interaction event such as product view or a search",
          "fields": null,
          "inputFields": [
            {
              "name": "target",
              "description": "The details of the event that needs to be dispatched for example, when viewing a product, the target is the identifier of the product; when viewing a category the target is the path of the category, and, when invoking a search the target is the actual search term. It is imperative that these events be sent.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "type",
              "description": "The type of the event that needs to be dispatched for example, viewing a product, viewing a category and invoking a search. It is imperative that these events be sent.",
              "type": {
                "kind": "ENUM",
                "name": "InteractionEventType",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Schema",
          "description": "A GraphQL Introspection defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, the entry points for query, mutation, and subscription operations.",
          "fields": [
            {
              "name": "types",
              "description": "A list of all types supported by this server.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Type",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "queryType",
              "description": "The type that query operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mutationType",
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "directives",
              "description": "'A list of all directives supported by this server.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Directive",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subscriptionType",
              "description": "'If this server support subscription, the type that subscription operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Type",
          "description": null,
          "fields": [
            {
              "name": "kind",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "__TypeKind",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fields",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Field",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "interfaces",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "possibleTypes",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "enumValues",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__EnumValue",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inputFields",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ofType",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "__TypeKind",
          "description": "An enum describing what kind of type a given __Type is",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "SCALAR",
              "description": "Indicates this type is a scalar.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OBJECT",
              "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERFACE",
              "description": "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNION",
              "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM",
              "description": "Indicates this type is an enum. `enumValues` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_OBJECT",
              "description": "Indicates this type is an input object. `inputFields` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LIST",
              "description": "Indicates this type is a list. `ofType` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NON_NULL",
              "description": "Indicates this type is a non-null. `ofType` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Field",
          "description": null,
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "args",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__InputValue",
          "description": null,
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "defaultValue",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__EnumValue",
          "description": null,
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "OBJECT",
          "name": "__Directive",
          "description": null,
          "fields": [
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locations",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "__DirectiveLocation",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "args",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "onOperation",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `locations`."
            },
            {
              "name": "onFragment",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `locations`."
            },
            {
              "name": "onField",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Use `locations`."
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "kind": "ENUM",
          "name": "__DirectiveLocation",
          "description": "An enum describing valid locations where a directive can be placed",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "QUERY",
              "description": "Indicates the directive is valid on queries.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MUTATION",
              "description": "Indicates the directive is valid on mutations.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIELD",
              "description": "Indicates the directive is valid on fields.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FRAGMENT_DEFINITION",
              "description": "Indicates the directive is valid on fragment definitions.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FRAGMENT_SPREAD",
              "description": "Indicates the directive is valid on fragment spreads.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INLINE_FRAGMENT",
              "description": "Indicates the directive is valid on inline fragments.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCHEMA",
              "description": "Indicates the directive is valid on a schema IDL definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCALAR",
              "description": "Indicates the directive is valid on a scalar IDL definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OBJECT",
              "description": "Indicates the directive is valid on an object IDL definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIELD_DEFINITION",
              "description": "Indicates the directive is valid on a field IDL definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARGUMENT_DEFINITION",
              "description": "Indicates the directive is valid on a field argument IDL definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERFACE",
              "description": "Indicates the directive is valid on an interface IDL definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNION",
              "description": "Indicates the directive is valid on an union IDL definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM",
              "description": "Indicates the directive is valid on an enum IDL definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_OBJECT",
              "description": "Indicates the directive is valid on an input object IDL definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_FIELD_DEFINITION",
              "description": "Indicates the directive is valid on an input object field IDL definition.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        }
      ],
      "directives": [
        {
          "name": "include",
          "description": "Directs the executor to include this field or fragment only when the `if` argument is true",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "args": [
            {
              "name": "if",
              "description": "Included when true.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ]
        },
        {
          "name": "skip",
          "description": "Directs the executor to skip this field or fragment when the `if`'argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "args": [
            {
              "name": "if",
              "description": "Skipped when true.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ]
        }
      ]
    }
  }
}